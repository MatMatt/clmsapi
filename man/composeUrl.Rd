% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/composeUrl.R
\name{composeUrl}
\alias{composeUrl}
\title{Compile the URL to query the CLMS API}
\usage{
composeUrl(
  productType = c("FSC", "RLIE", "PSA", "PSA-LAEA", "ARLIE"),
  geometry,
  publishedAfter,
  publishedBefore,
  startDate,
  completionDate,
  productIdentifier,
  cloudCover = 100,
  textualSearch,
  maxRecords = 1000
)
}
\arguments{
\item{productType}{\code{character}. One of: FSC, RLIE, PSA, PSA-LAEA, ARLIE}

\item{geometry}{The area of interest. See \code{geo2char} for inputs.}

\item{publishedAfter}{\code{character}. Data published after: YYYY-MM-DD}

\item{publishedBefore}{\code{character}. Data published before: YYYY-MM-DD}

\item{startDate}{\code{character}. Sensing Date after: YYYY-MM-DD}

\item{completionDate}{\code{character}. Sensing Date before: YYYY-MM-DD}

\item{productIdentifier}{\code{character}. Find products using elements of the
filename: FSC_20170913T114531_S2B_T29UNV_V001_0: e.g. FSC_2020, TileID, etc.
(its not regex though)}

\item{cloudCover}{\code{integer}. \code{0-100\%}. Maximum allowed Cloud cover}

\item{textualSearch}{\code{character} e.g. \code{Winter in Finland}}

\item{maxRecords}{\code{numeric or character} maximum returns per page.}
}
\value{
Returns an URL \code{character} that can be submitted to the Server API.
}
\description{
This function compiles REST query (URL) that can be submitted to the server.
}
\examples{
composeUrl(productType = 'FSC', productIdentifier = 'T29UNV')

}
\author{
Matteo Mattiuzzi
}
